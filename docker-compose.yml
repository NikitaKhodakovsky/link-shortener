services:
    nginx:
        container_name: link-shortener_nginx
        image: nginx:1.25.3-alpine
        restart: always
        ports:
            - ${NGINX_PORT}:80
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
            - ui
            - server

    ui:
        container_name: link-shortener_ui
        init: true
        build:
            context: .
            dockerfile: apps/ui/Dockerfile
            args:
                - PUBLIC_URL=/dashboard
        environment:
            - PUBLIC_URL=/dashboard
            - PORT=80
        depends_on:
            - server

    server:
        container_name: link-shortener_server
        init: true
        build:
            context: .
            dockerfile: apps/server/Dockerfile
        environment:
            - SERVER_PORT=80
            - SESSION_SECRET
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_USERNAME
            - DB_PASSWORD
            - DB_DATABASE
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - REDIS_PASSWORD
        depends_on:
            - postgres
            - redis

    auth-service:
        container_name: link-shortener_auth-service
        init: true
        build:
            context: .
            dockerfile: apps/auth-service/Dockerfile
        environment:
            - SERVER_PORT=80
            - DB_HOST=auth-service-postgres
            - DB_PORT=5432
            - JWT_PUBLIC_KEY
            - JWT_PRIVATE_KEY
            - DB_USERNAME=${AUTH_SERVICE_DB_USERNAME}
            - DB_PASSWORD=${AUTH_SERVICE_DB_PASSWORD}
            - DB_DATABASE=postgres
            - REDIS_HOST=auth-service-redis
            - REDIS_PORT=6379
            - REDIS_PASSWORD=${AUTH_SERVICE_REDIS_PASSWORD}
        depends_on:
            - auth-service-postgres
            - auth-service-redis

    auth-service-postgres:
        container_name: link-shortener_auth-service-postgres
        image: postgres:14.4-alpine
        volumes:
            - auth-service-postgres:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${AUTH_SERVICE_DB_USERNAME}
            - POSTGRES_PASSWORD=${AUTH_SERVICE_DB_PASSWORD}
            - POSTGRES_DB=postgres

    auth-service-redis:
        container_name: link-shortener_auth-service-redis
        image: redis:7.2.4-alpine
        command: redis-server --requirepass ${AUTH_SERVICE_REDIS_PASSWORD}
        volumes:
            - auth-service-redis:/data

    postgres:
        container_name: link-shortener_postgres
        image: postgres:14.4-alpine
        volumes:
            - postgres:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_DATABASE}

    redis:
        container_name: link-shortener_redis
        image: redis:7.2.4-alpine
        command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis:/data

volumes:
    auth-service-postgres:
    auth-service-redis:
    postgres:
    redis:
