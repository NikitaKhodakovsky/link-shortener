user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
	worker_connections 1024;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
	'$status $body_bytes_sent "$http_referer" '
	'"$http_user_agent" "$http_x_forwarded_for"';

	access_log off;

	sendfile on;
	tcp_nopush on;

	server_tokens off;

	keepalive_timeout 65;

	gzip on;
	gzip_disable "msie6";

	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_min_length 256;
	gzip_types
	application/atom+xml
	application/geo+json
	application/javascript
	application/x-javascript
	application/json
	application/ld+json
	application/manifest+json
	application/rdf+xml
	application/rss+xml
	application/xhtml+xml
	application/xml
	font/eot
	font/otf
	font/ttf
	image/svg+xml
	text/css
	text/javascript
	text/plain
	text/xml;

	server {
		listen 3000;

		location = /health {
			return 200;
		}
	}

	## Uncomment to configure redirection from HTTP to HTTPS (NGINX_TLS)
	# server {
	# 	listen 80;
	# 	listen [::]:80;
	#
	# 	server_name shortener.khodakovsky.com;

	# 	location / {
	# 		return 301 https://$host$request_uri;
	# 	}
	# }
	#
	server {
		# To configure TLS, create a folder named "certificates" with crt-chain.crt, private.key and dhparams.pem files in the repository root folder and follow instructions marked with "NGINX_TLS" in nginx.conf and docker-compose.yml files.
		#
		# Use this command to generate dhparams.pem - openssl dhparam -out dhparams.pem 4096
		# To create crt-chain.crt file you need to concatenate certificate.crt and ca_bundle.crt files - cat certificate.crt ca_bundle.crt > crt-chain.crt
		#
		# Uncomment these lines (NGINX_TLS)
		# listen 443 ssl;
		# listen [::]:443 ssl;

		# http2 on;

		# server_name shortener.khodakovsky.com;
		#
		# ssl_certificate /etc/nginx/certificates/crt-chain.crt;
		# ssl_certificate_key /etc/nginx/certificates/private.key;
		# ssl_dhparam /etc/nginx/certificates/dhparams.pem;
		# ssl_protocols TLSv1.2 TLSv1.3;
		# ssl_ciphers TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256;
		# ssl_prefer_server_ciphers off;
		# ssl_session_timeout 1d;
		# ssl_session_cache shared:SSL:10m; # about 40000 sessions
		# ssl_session_tickets off;
		#
		#
		#
		# Comment this line (NGINX_TLS)
		listen 80;

		proxy_http_version 1.1;

		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Port $server_port;

		proxy_hide_header X-Powered-By;

		# Security
		add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data:; object-src 'none';" always;
		add_header X-Content-Type-Options "nosniff" always;
		add_header Referrer-Policy "origin" always;

		# Uncomment this line (NGINX_TLS)
		# add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

		location = /api/auth {
			proxy_pass http://auth-service;
		}

		location /api/auth/ {
			proxy_pass http://auth-service;
		}

		location = /api/links {
			proxy_pass http://link-service;
		}

		location /api/links/ {
			proxy_pass http://link-service;
		}

		location = /api/demo {
			proxy_pass http://demo-service;
		}

		location /api/demo/ {
			proxy_pass http://demo-service;
		}

		location = /dashboard {
			proxy_pass http://ui/;
		}

		location /dashboard/ {
			proxy_pass http://ui/;
		}

		location = /favicon.ico {
			proxy_pass http://ui;
		}

		location = / {
			return 302 /dashboard;
		}

		location / {
			proxy_pass http://click-service/;
		}
	}
}
